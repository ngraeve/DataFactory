{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "Data-Factory-PFG"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					},
					{
						"name": "Web1",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "dataflow1",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dataflow2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-13.centralus.logic.azure.com:443/workflows/63df0018c5d041138e54e821a4cba831/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=Ygyt3fjiaFCULywDQHSDc0sklihlM4LSpEQ-u2vVnmE",
							"method": "POST",
							"headers": {
								"Content-Type": "application/json"
							},
							"body": {
								"dataFactoryName": "@{pipeline().DataFactory}",
								"pipelineName": "@{pipeline().Pipeline}"
							}
						}
					},
					{
						"name": "dataflow2",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow2",
								"type": "DataFlowReference"
							},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							}
						}
					}
				],
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStore1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureDataLakeStoreLocation",
						"folderPath": "MultipleFiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "ItemType",
						"type": "String"
					},
					{
						"name": "SalesChannel",
						"type": "String"
					},
					{
						"name": "OrderPriority",
						"type": "String"
					},
					{
						"name": "OrderDate",
						"type": "String"
					},
					{
						"name": "OrderID",
						"type": "String"
					},
					{
						"name": "ShipDate",
						"type": "String"
					},
					{
						"name": "UnitsSold",
						"type": "String"
					},
					{
						"name": "UnitPrice",
						"type": "String"
					},
					{
						"name": "UnitCost",
						"type": "String"
					},
					{
						"name": "TotalRevenue",
						"type": "String"
					},
					{
						"name": "TotalCost",
						"type": "String"
					},
					{
						"name": "TotalProfit",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Parquet1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "\n\nsource(output(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as long,\n\t\tShipDate as string,\n\t\tUnitsSold as long,\n\t\tUnitPrice as double,\n\t\tUnitCost as double,\n\t\tTotalRevenue as double,\n\t\tTotalCost as double,\n\t\tTotalProfit as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 9999999,\n\tformat: 'parquet') ~> source1\nAggregate1 filter(OrderPriority=='H') ~> Filter1\nsource1 aggregate(groupBy(Region,\n\t\tCountry,\n\t\tOrderPriority),\n\tTotalRevenue = sum(TotalRevenue),\n\t\tTotalProfit = avg(TotalProfit)) ~> Aggregate1\nFilter1 sink(input(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as string,\n\t\tShipDate as string,\n\t\tUnitsSold as string,\n\t\tUnitPrice as string,\n\t\tUnitCost as string,\n\t\tTotalRevenue as string,\n\t\tTotalCost as string,\n\t\tTotalProfit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "Filter1"
						},
						{
							"name": "Aggregate1"
						}
					],
					"script": "\n\nsource(output(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as string,\n\t\tShipDate as string,\n\t\tUnitsSold as string,\n\t\tUnitPrice as string,\n\t\tUnitCost as string,\n\t\tTotalRevenue as string,\n\t\tTotalCost as string,\n\t\tTotalProfit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 9999999) ~> source1\nAggregate1 filter(OrderPriority=='H') ~> Filter1\nsource1 aggregate(groupBy(Region,\n\t\tCountry,\n\t\tOrderPriority),\n\tTotalRevenue = sum(toDouble(TotalRevenue)),\n\t\tTotalProfit = avg(toDouble(TotalProfit))) ~> Aggregate1\nFilter1 sink(input(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as string,\n\t\tShipDate as string,\n\t\tUnitsSold as string,\n\t\tUnitPrice as string,\n\t\tUnitCost as string,\n\t\tTotalRevenue as string,\n\t\tTotalCost as string,\n\t\tTotalProfit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]"
			]
		}
	]
}