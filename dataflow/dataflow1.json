{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "Filter1"
				},
				{
					"name": "Aggregate1"
				}
			],
			"script": "\n\nsource(output(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as long,\n\t\tShipDate as string,\n\t\tUnitsSold as long,\n\t\tUnitPrice as double,\n\t\tUnitCost as double,\n\t\tTotalRevenue as double,\n\t\tTotalCost as double,\n\t\tTotalProfit as double\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tlimit: 9999999,\n\tformat: 'parquet') ~> source1\nAggregate1 filter(OrderPriority=='H') ~> Filter1\nsource1 aggregate(groupBy(Region,\n\t\tCountry,\n\t\tOrderPriority),\n\tTotalRevenue = sum(TotalRevenue),\n\t\tTotalProfit = avg(TotalProfit)) ~> Aggregate1\nFilter1 sink(input(\n\t\tRegion as string,\n\t\tCountry as string,\n\t\tItemType as string,\n\t\tSalesChannel as string,\n\t\tOrderPriority as string,\n\t\tOrderDate as string,\n\t\tOrderID as string,\n\t\tShipDate as string,\n\t\tUnitsSold as string,\n\t\tUnitPrice as string,\n\t\tUnitCost as string,\n\t\tTotalRevenue as string,\n\t\tTotalCost as string,\n\t\tTotalProfit as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false) ~> sink1"
		}
	}
}